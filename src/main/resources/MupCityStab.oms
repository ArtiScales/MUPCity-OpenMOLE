

val name = Val[String]
val folderIn = Val[File]
val dataFiles = ListDirectoriesSource(workDirectory / "data", folderIn)
val folderOut = Val[File]
val projectFile = Val[File]
val resultFolder = workDirectory / "results"

val rangeSeed = (42L to 1042L)
val rangenMax = (3 to 7)

//project param
val seed = Val[Long]
val xmin = Val[Double]
val ymin = Val[Double]
val width = Val[Double]
val height = Val[Double]
val xshift = Val[Double]
val yshift = Val[Double]
val dataHT = Vam[Collection]

//decomp param
val threshold = Val[Double]
val minSize = Val[Double]
val maxSize = Val[Double]

//scenar param
val ahp0 = Val[Double]
val ahp1 = Val[Double]
val ahp2 = Val[Double]
val ahp3 = Val[Double]
val ahp4 = Val[Double]
val ahp5 = Val[Double]
val ahp6 = Val[Double]
val ahp7 = Val[Double]
val ahp8 = Val[Double]
val mean = Val[Boolean]
val strict = Val[Boolean]
val nMax = Val[Int]


val exploStab = ExplorationTask(seed in rangeSeed x 
								nMax in rangenMax x 	
								mean in List("True","False") x
								strict in List("True","False") x
								folderIn in dataFiles
								)

val ProjectCreationTask = ScalaTask("val projectFile = newDir(); val projectFile = fr.ign.ProjectCreationTask.run(name, folderIn, folderOut, xmin, ymin, width, height, shiftX, shiftY)") set (
  libraries += workDirectory / "mupcity-openMole-0.0.1-SNAPSHOT-shaded.jar",
  folderIn := workDirectory / dataFiles	,
  name := Stability,
  xmin := 914760.0,
  ymin := 6680157.0,
  width := 28303.0,
  height := 21019.0,
  xshift := 0.0,
  yshift := 0.0,
  inputs += (name, folderIn, xmin, ymin, width, height, xshift, yshift),
  outputs += (projectFile)
)

val ProjectCreationTask = ScalaTask("fr.ign.DecompTask.run(projectFile, name, minSize, maxSize, seuilDensBuild);") set (
  libraries += workDirectory / "mupcity-openMole-0.0.1-SNAPSHOT-shaded.jar",
  minSize :=20,
  maxSize :=1620 
  seuilDensBuild :=0
  inputs += (projectFile,name,minSize,maxSize,seuilDensBuild),
)

val SimuTask = ScalaTask("fr.ign.SimulTask.run(projectFile, name, nMax, strict, ahp0, ahp1, ahp2, ahp3, ahp4, ahp5, ahp6, ahp7, ahp8, mean, seed)") set (
  libraries += workDirectory / "mupcity-openMole-0.0.1-SNAPSHOT-shaded.jar",
  ahp0 := 0.111,
  ahp1 := 0.111,
  ahp2 := 0.111,
  ahp3 := 0.111,
  ahp4 := 0.111,
  ahp5 := 0.111,
  ahp6 := 0.111,
  ahp7 := 0.111,
  ahp8 := 0.111,
  inputs += (projectFile, name, nMax, strict, ahp0, ahp1, ahp2, ahp3, ahp4, ahp5, ahp6, ahp7, ahp8, mean, seed),
  outputs += (folderOut)
)

val ResultTask = ScalaTask("val resultFile = newDir(); val resultFile = fr.ign.RasterAnalyseTask.runStab(projectFile, discreteFile, buildFile, name);") set (
  libraries += workDirectory / "mupcity-openMole-0.0.1-SNAPSHOT-shaded.jar",
  discreteFile := workDirectory / "data/admin_typo.shp",
  buildFile := workDirectory / "data/batiment.shp",
  inputs += (projectFile, discreteFile,buildFile,name),
  outputs += (resultFile)
)

val copyHook =  CopyFileHook(resultFile, resultFolder / "${projectFile}")

//val env = LocalEnvironment(6)

val env = EGIEnvironment(
  "vo.complex-systems.eu",
  openMOLEMemory = 2048 megabytes
)

explo -< (ProjectCreationTask -- DecompTask -- SimuTask -- ResultTask  on env hook (copyHook))
